version: '3.8'

services:
  api:
    build: taskflowapi/api
    container_name: api
    volumes:
      - ./taskflowapi/api/app:/code/app
      - shared-volume:/code/data
      - ./taskflowapi/shared_utils:/code/shared_utils
      - ./algorithmworkers/config.py:/code/available_algorithms.py
    command: uvicorn app.main:app --host 0.0.0.0 --port 80
    ports:
      - "8080:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
        - shared-network

  orchestrator:
    build: taskflowapi/orchestrator
    container_name: orchestrator
    volumes:
      - ./taskflowapi/orchestrator/app:/code/app
      - shared-volume:/code/data
      - ./taskflowapi/shared_utils:/code/app/shared_utils
    working_dir: /code/app
    command: bash -c "python3 main.py"
    depends_on:
      - api
      - rabbitmq
      - redis
    networks:
      - shared-network

  parser:
    build: taskflowapi/parser
    container_name: parser
    volumes:
      - ./taskflowapi/parser/app:/code/app
      - shared-volume:/code/data
      - ./taskflowapi/shared_utils:/code/app/shared_utils
      - ./algorithmworkers/config.py:/code/app/available_algorithms.py
    working_dir: /code/app
    command: bash -c "python3 main.py"
    depends_on:
      - api
      - rabbitmq
      - redis
      - orchestrator
      - pangolin
    networks:
      - shared-network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - shared-network
    healthcheck:
      test: "exit 0"


  redis:
    image: redis:latest
    container_name: redisalg
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - shared-network

#  frontend:
#    build: ./frontend
#    container_name: frontend
#    ports:
#      - "8081:80"
#    networks:
#      - shared-network
#    depends_on:
#      - api

  # algorithms
  pangolin:
    build:
      context: ./algorithmworkers/
      dockerfile: ./pangolin/Dockerfile
    volumes:
      - shared-volume:/code/data
    working_dir: /code
    depends_on:
      - api
      - rabbitmq
    networks:
      - shared-network

  spip:
    build: 
      context: ./algorithmworkers/
      dockerfile: ./spip/Dockerfile
    working_dir: /code
    volumes:
      - shared-volume:/code/data
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - shared-network

  tests:
    build: ./tests
    container_name: tests
    volumes:
      - ./tests/test_api:/code/test_api
      - ./config.py:/code/config.py
    working_dir: /code
    command: tail -f /dev/null
    networks:
      - shared-network
    depends_on:
      - api
      - rabbitmq
      - redis


networks:
    shared-network:

volumes:
  redis-data:
  shared-volume:
